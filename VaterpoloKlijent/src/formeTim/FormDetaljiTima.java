/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package formeTim;

import controller.ClientController;
import domain.Grad;
import domain.Igrac;
import domain.Tim;
import domain.Vaterpolista;
import forme.MainForm;
import java.util.ArrayList;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import modeli.TableModelIgraci;

/**
 *
 * @author stefan
 */
public class FormDetaljiTima extends javax.swing.JDialog {
    
    private Tim t;
    Locale jezik;
    ArrayList<Igrac> dodati = new ArrayList<>();
    ArrayList<Igrac> obrisani = new ArrayList<>();

    /**
     * Creates new form FormDetaljiTima
     */
    public FormDetaljiTima(JDialog parent, boolean modal, Tim t, Locale jezik) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.t=t;
        txtNaziv.setText(t.getNazivTima());
        popuniGradove();
        popuniIgrace();
        this.jezik = jezik;
        namestiJezik();
        brojKapice();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTim = new javax.swing.JPanel();
        lblGrad = new javax.swing.JLabel();
        lblNaziv = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        cmbGrad = new javax.swing.JComboBox();
        pnlIgraci = new javax.swing.JPanel();
        lblIgrac = new javax.swing.JLabel();
        lblPozicija = new javax.swing.JLabel();
        lblBrojKapice = new javax.swing.JLabel();
        cmbIgraci = new javax.swing.JComboBox();
        cmbPozicija = new javax.swing.JComboBox<>();
        txtBrojKapice = new javax.swing.JFormattedTextField();
        btnDodaj = new javax.swing.JButton();
        btnObrisi1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblIgraci = new javax.swing.JTable();
        btnZatvori = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlTim.setBorder(javax.swing.BorderFactory.createTitledBorder("Tim"));
        pnlTim.setMaximumSize(new java.awt.Dimension(846, 436));

        lblGrad.setText("Grad:");

        lblNaziv.setText("Naziv:");

        cmbGrad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        pnlIgraci.setBorder(javax.swing.BorderFactory.createTitledBorder("Igraci"));
        pnlIgraci.setMaximumSize(new java.awt.Dimension(813, 301));

        lblIgrac.setText("Igrac:");

        lblPozicija.setText("Pozicija:");

        lblBrojKapice.setText("Broj kapice");

        cmbIgraci.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbPozicija.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Golman", "Bek", "Sidro", "Krilo" }));

        txtBrojKapice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtBrojKapice.setText("1");
        txtBrojKapice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBrojKapiceActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj igraca");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi1.setText("Obrisi igraca");
        btnObrisi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisi1ActionPerformed(evt);
            }
        });

        tblIgraci.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblIgraci);

        javax.swing.GroupLayout pnlIgraciLayout = new javax.swing.GroupLayout(pnlIgraci);
        pnlIgraci.setLayout(pnlIgraciLayout);
        pnlIgraciLayout.setHorizontalGroup(
            pnlIgraciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIgraciLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlIgraciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(pnlIgraciLayout.createSequentialGroup()
                        .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 191, Short.MAX_VALUE)
                        .addComponent(btnObrisi1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlIgraciLayout.createSequentialGroup()
                        .addGroup(pnlIgraciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPozicija)
                            .addComponent(lblBrojKapice)
                            .addComponent(lblIgrac))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addGroup(pnlIgraciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbPozicija, javax.swing.GroupLayout.Alignment.TRAILING, 0, 680, Short.MAX_VALUE)
                            .addComponent(cmbIgraci, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtBrojKapice))))
                .addContainerGap())
        );
        pnlIgraciLayout.setVerticalGroup(
            pnlIgraciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIgraciLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlIgraciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIgrac)
                    .addComponent(cmbIgraci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlIgraciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPozicija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPozicija))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlIgraciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBrojKapice)
                    .addComponent(txtBrojKapice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlIgraciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnZatvori.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnZatvori.setText("Zatvori");
        btnZatvori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZatvoriActionPerformed(evt);
            }
        });

        btnObrisi.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnObrisi.setText("Obrisi tim");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnIzmeni.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnIzmeni.setText("Izmeni tim");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTimLayout = new javax.swing.GroupLayout(pnlTim);
        pnlTim.setLayout(pnlTimLayout);
        pnlTimLayout.setHorizontalGroup(
            pnlTimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTimLayout.createSequentialGroup()
                        .addGroup(pnlTimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNaziv)
                            .addComponent(lblGrad))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlTimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbGrad, 0, 697, Short.MAX_VALUE)
                            .addComponent(txtNaziv)))
                    .addGroup(pnlTimLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(pnlTimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pnlIgraci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlTimLayout.createSequentialGroup()
                                .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(136, 136, 136)
                                .addComponent(btnZatvori, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlTimLayout.setVerticalGroup(
            pnlTimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNaziv)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGrad)
                    .addComponent(cmbGrad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlIgraci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addGroup(pnlTimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnZatvori, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed

        try {

            if (txtNaziv.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, 
                        ResourceBundle.getBundle("resource/messages").getString("polja_msg"));
                return;
            }

            String naziv = txtNaziv.getText();
            Grad grad = (Grad) cmbGrad.getSelectedItem();

            TableModelIgraci tm = (TableModelIgraci) tblIgraci.getModel();

            t.setNazivTima(naziv);
            t.setGrad(grad);
            t.setIgraci(tm.getLista());
            t.setDodati(dodati);
            t.setObrisani(obrisani);

            ClientController.getInstance().updateTim(t);
            FormPretragaTimova fp = (FormPretragaTimova) getParent();
            fp.refreshTable();
            JOptionPane.showMessageDialog(this, 
                    ResourceBundle.getBundle("resource/messages").getString("izmenjen_tim_msg"));
            this.dispose();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ResourceBundle.getBundle("resource.messages").getString(ex.getMessage()));
            //Logger.getLogger(FormDetaljiTima.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed

        int result = JOptionPane.showConfirmDialog(this, 
                ResourceBundle.getBundle("resource/messages").getString("brisanje_tim_potvrda"), 
                ResourceBundle.getBundle("resource/messages").getString("konfirmacija"), 
                JOptionPane.YES_NO_OPTION);

        if (result == JOptionPane.NO_OPTION) {
            return;
        }

        if (result == JOptionPane.YES_OPTION) {
            try {
                ClientController.getInstance().deleteTim(t);
                FormPretragaTimova fp = (FormPretragaTimova) getParent();
                fp.refreshTable();
                JOptionPane.showMessageDialog(this, 
                        ResourceBundle.getBundle("resource/messages").getString("brisanje_tim"));
                this.dispose();
            } catch (Exception ex) {
                Logger.getLogger(FormDetaljiTima.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnZatvoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZatvoriActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnZatvoriActionPerformed

    private void btnObrisi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisi1ActionPerformed

        int row = tblIgraci.getSelectedRow();

        if (row >= 0) {
            TableModelIgraci tm = (TableModelIgraci) tblIgraci.getModel();
            boolean postoji = false;
            
            ArrayList<Igrac> copyDodati = new ArrayList<>(dodati);
            for (Igrac igrac : copyDodati) {
                if (tm.getLista().get(row).equals(igrac)) postoji = dodati.remove(igrac);
            }
            
            if (!postoji) {
                obrisani.add(tm.getLista().get(row));
            }
            
            cmbIgraci.addItem(tm.obrisiIgraca(row));
            brojKapice();
            
            cmbIgraci.setEnabled(true);
            btnDodaj.setEnabled(true);
        }
    }//GEN-LAST:event_btnObrisi1ActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed

        if (txtBrojKapice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                    ResourceBundle.getBundle("resource/messages").getString("polja_msg"));
            return;
        }

        int brojKapice = Integer.parseInt(txtBrojKapice.getText());
        String pozicija = (String) cmbPozicija.getSelectedItem();
        Vaterpolista v = (Vaterpolista) cmbIgraci.getSelectedItem();               

        Igrac i = new Igrac(null, brojKapice, pozicija, v);

        if (brojKapice>99 || brojKapice<0) {
            JOptionPane.showMessageDialog(this, 
                    ResourceBundle.getBundle("resource/messages").getString("kapica099"));
            return;
        }
        
        TableModelIgraci tm = (TableModelIgraci) tblIgraci.getModel();
        
        if (tm.postojiBrojKapice(brojKapice)) {
            JOptionPane.showMessageDialog(this, 
                    ResourceBundle.getBundle("resource/messages").getString("kapica_zauzeta"));
            return;
        }
        
        boolean postoji = false;
        
        ArrayList<Igrac> copyObrisani = new ArrayList<>(obrisani);
        for (Igrac igrac : copyObrisani) {
            
            if (i.getVaterpolista().equals(igrac.getVaterpolista()) && i.getBrojKapice()==igrac.getBrojKapice() && i.getPozicija().equals(igrac.getPozicija()) ) {
                postoji = obrisani.remove(igrac);
            }
        }
        
        tm.dodajIgraca(i);
        
        if (!postoji) {
            dodati.add(i);
        }
        
        cmbIgraci.removeItem(cmbIgraci.getSelectedItem());
        if (cmbIgraci.getModel().getSize() == 0) { 
            cmbIgraci.setEnabled(false);
            btnDodaj.setEnabled(false);
        }
        txtBrojKapice.setText(Integer.toString(tm.getLista().size()+1));
        
    }//GEN-LAST:event_btnDodajActionPerformed

    private void txtBrojKapiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBrojKapiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBrojKapiceActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnObrisi1;
    private javax.swing.JButton btnZatvori;
    private javax.swing.JComboBox cmbGrad;
    private javax.swing.JComboBox cmbIgraci;
    private javax.swing.JComboBox<String> cmbPozicija;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBrojKapice;
    private javax.swing.JLabel lblGrad;
    private javax.swing.JLabel lblIgrac;
    private javax.swing.JLabel lblNaziv;
    private javax.swing.JLabel lblPozicija;
    private javax.swing.JPanel pnlIgraci;
    private javax.swing.JPanel pnlTim;
    private javax.swing.JTable tblIgraci;
    private javax.swing.JFormattedTextField txtBrojKapice;
    private javax.swing.JTextField txtNaziv;
    // End of variables declaration//GEN-END:variables

    private void popuniIgrace() {
        try {
            ArrayList<Vaterpolista> vaterpolisti = ClientController.getInstance().getAllVaterpolista();
            
            ArrayList<Igrac> zauzetiIgraci = new ArrayList<>();
            
            for (Igrac igrac : ClientController.getInstance().getAllIgrac()) {
                zauzetiIgraci.add(igrac);
            }     
            
            cmbIgraci.removeAllItems();

            for (Vaterpolista vaterpolista : vaterpolisti) {
                boolean slobodan = true;
                for (Igrac igrac : zauzetiIgraci) {
                    if (vaterpolista.getVaterpolistaID().equals(igrac.getVaterpolista().getVaterpolistaID())) {
                        slobodan = false;
                        break;
                    }
                }
                if (slobodan) {
                    cmbIgraci.addItem(vaterpolista);
                }
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniGradove() {
        try {
            ArrayList<Grad> gradovi = ClientController.getInstance().getAllGrad();

            cmbGrad.removeAllItems();
            int index = 0;
            
            for (Grad grad : gradovi) {
                cmbGrad.addItem(grad);
                if (t.getGrad().getGradID().equals(grad.getGradID())) {
                    cmbGrad.setSelectedIndex(index);
                }
                index++;
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void brojKapice() {
        int bk = 1;
        for (Igrac igrac : ((TableModelIgraci) tblIgraci.getModel()).getLista()) {
            if (igrac.getBrojKapice()==bk) {
                bk++;
            } else break;
        }
        
        txtBrojKapice.setText(Integer.toString(bk));
    }
    
    private void namestiJezik() {
        ResourceBundle bundle = ResourceBundle.getBundle("resource/messages");
        
        setTitle(bundle.getString("detalji_tim"));
        
        pnlTim.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("tim")));
        pnlIgraci.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("igraci")));
        
        lblBrojKapice.setText(bundle.getString("broj_kapice"));
        lblGrad.setText(bundle.getString("grad"));
        lblIgrac.setText(bundle.getString("igrac"));
        lblNaziv.setText(bundle.getString("naziv"));
        lblPozicija.setText(bundle.getString("pozicija"));
        
        btnDodaj.setText(bundle.getString("dodaj_igraca"));
        btnObrisi.setText(bundle.getString("obrisi_tim"));
        btnObrisi1.setText(bundle.getString("ukloni_igraca"));
        btnIzmeni.setText(bundle.getString("izmeni_tim"));
        btnZatvori.setText(bundle.getString("close"));
        
        String[] kolone = {bundle.getString("broj_kapice"), bundle.getString("vaterpolista") + ":", bundle.getString("pozicija")};
        TableModelIgraci model = new TableModelIgraci(t);
        model.setKolone(kolone);
        tblIgraci.setModel(model);
        
    }
}
